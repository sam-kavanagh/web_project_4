!function(){"use strict";var e={formSelector:".popup__form",inputSelector:".popup__input",inputTextError:"popup__input_has-error",inputVisibleError:"popup__text-error_visible",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled"},t=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=document.querySelector(e).querySelector(".popup__submit-button");n.textContent=t?"Saving...":"Save"};function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,r;return t=e,(r=[{key:"_handleServerResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getAppInfo",value:function(){return Promise.all([this.getInitialCardList(),this.getProfileInfo()])}},{key:"getProfileInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._handleServerResponse)}},{key:"setProfileInfo",value:function(e){var t=e.name,n=e.description;return fetch("".concat(this._baseUrl,"/users/me "),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,description:n})}).then(this._handleServerResponse)}},{key:"getInitialCardList",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._handleServerResponse)}},{key:"addCard",value:function(e){var t=e.name,n=e.link;return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify({name:t,link:n})}).then(this._handleServerResponse)}},{key:"setCardLikes",value:function(){return fetch("".concat(this._baseUrl,"/cards/likes/cardId"),{headers:this._headers}).then(this._handleServerResponse)}},{key:"toggleCardLikeStatus",value:function(e){e._id;var t=e.like;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(cardId),{headers:this._headers,method:t?"PUT":"DELETE"}).then(this._handleServerResponse)}},{key:"setProfileAvatar",value:function(e){var t=e.avatar;return fetch("".concat(this._baseUrl,"/users/me/avatar "),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:t})}).then(console.log(this._handleServerResponse))}},{key:"deleteCard",value:function(e){return e._id,fetch("".concat(this._baseUrl,"/cards/").concat(cardId),{headers:this._headers,method:"DELETE"}).then(this._handleServerResponse)}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){this._items.forEach(this._renderer)}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.data,o=t.userId,i=t.handleCardClick,a=t.handleLikesClick,u=t.handleTrashClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._text=r.name,this._link=r.link,this._likes=r.likes,this._cardId=r._id,this._ownerId=r.owner._id,this._userId=o,this._handleCardClick=i,this._handleLikesClick=a,this._handleTrashClick=u,this._cardSelector=n}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._trashButton=this._element.querySelector(".element__trash-button"),this._element.querySelector(".element__like-button").addEventListener("click",(function(t){e._handleLikesClick()})),this._element.querySelector(".element__trash-button").addEventListener("click",(function(t){e._handleTrashClick()})),this._element.querySelector(".element__image").addEventListener("click",(function(t){return e._handleCardClick({link:e._link,text:e._text})})),this.updateLikes()}},{key:"_handleLikes",value:function(){this._element.querySelector(".element__like-button").classList.toggle("element__like-button_full")}},{key:"_handleTrash",value:function(){this._element.remove(),this.element=null}},{key:"getView",value:function(){this._element=this._getTemplate(),this._setEventListeners();var e=this._element.querySelector(".element__image");return e.src=this._link,e.alt=this._text,this._element.querySelector(".element__title").textContent=this._text,this._element}},{key:"hideTrashButton",value:function(){this._ownerId!=this._userId&&this._trashButton.remove()}},{key:"isLiked",value:function(){return!!this._likeButton.classList.contains(".element__like-button_full")}},{key:"checkIfLiked",value:function(){var e=this;return Boolean(this._likes.find((function(t){return t._id===e._userId})))}},{key:"setLikesInfo",value:function(e){this._likes=e.likes,this.updateLikes()}},{key:"updateLikes",value:function(e){this._element.querySelector(".element__like-count").textContent=this._likes.length,this.isLiked()?this._element.querySelector(".element__like-button").classList.add(".element__like-button_full"):this._element.querySelector(".element__like-button").classList.remove(".element__like-button_full")}},{key:"getId",value:function(){return this._cardId}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup_open")||t.target.classList.contains("popup__close-button"))&&e.close()}))}},{key:"open",value:function(){this._popupElement.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function y(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._imageElement=t._popupElement.querySelector(".popup__preview-image"),t._imageCaption=t._popupElement.querySelector(".popup__caption"),t}return t=a,(n=[{key:"open",value:function(e){this._imageElement.src=e.link,this._imageCaption.textContent=e.text,this._imageElement.alt=e.text,f(_(a.prototype),"open",this).call(this)}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function E(e,t){return E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},E(e,t)}function S(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._popupForm=t._popupElement.querySelector(".popup__form"),t._handleFormSubmit=r,t._inputList=t._popupElement.querySelectorAll(".popup__input"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.close()})),k(w(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._popupForm.reset(),k(w(a.prototype),"close",this).call(this)}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t){var n=t.userNameSelector,r=t.userDescriptionSelector,o=t.userAvatarSelector,i=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameElement=document.querySelector(n),this._userDescriptionElement=document.querySelector(r),this._userAvatarElement=document.querySelector(o),this._userId=i}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userNameElement.textContent,description:this._userDescriptionElement.textContent,avatar:this._userAvatarElement.style.backgroundImage,_id:this._id}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.description,r=e.avatar,o=e._id;t&&(this._userNameElement.textContent=data.Name),n&&(this._userDescriptionElement.textContent=data.Description),r&&(this._userAvatarElement.src=r),o&&(this._userId=data._id)}},{key:"getUserId",value:function(){return this._id}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function j(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._inputTextError=t.inputTextError,this._inputVisibleError=t.inputVisibleError,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._formEl=n}var t,n;return t=e,(n=[{key:"_addInputError",value:function(e){e.classList.add(this._inputTextError)}},{key:"_removeInputError",value:function(e){e.classList.remove(this._inputTextError)}},{key:"_showMessageError",value:function(e){var t=this._formEl.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._inputVisibleError)}},{key:"_hideMessageError",value:function(e){var t=this._formEl.querySelector("#".concat(e.id,"-error"));t.textContent=" ",t.classList.remove(this._inputVisibleError)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?(this._hideMessageError(e),this._removeInputError(e)):(this._showMessageError(e),this._addInputError(e))}},{key:"_toggleButton",value:function(){this._hasInvalidInput(this._inputList)?(this._buttonEl.disabled=!0,this._buttonEl.classList.add(this._inactiveButtonClass)):(this._buttonEl.classList.remove(this._inactiveButtonClass),this._buttonEl.disabled=!1)}},{key:"_setEventListeners",value:function(){var e,t=this;this._inputList=function(e){if(Array.isArray(e))return j(e)}(e=this._formEl.querySelectorAll(this._inputSelector))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return j(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?j(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._buttonEl=this._formEl.querySelector(this._submitButtonSelector),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButton()}))})),this.resetValidation()}},{key:"resetValidation",value:function(){var e=this;this._inputList.forEach((function(t){e._hideMessageError(t),e._removeInputError(t)})),this._toggleButton()}},{key:"enableValidation",value:function(){this._formEl.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function x(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function T(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var A=document.querySelector(".profile__edit-button"),R=document.querySelector(".profile__add-button"),U=(document.querySelector("#card-template"),document.querySelector(".elements"),document.querySelector("#name-input"),document.querySelector("#description-input"),document.querySelector("#profile-avatar-button")),V=document.querySelector("#delete-card-popup"),B=new r({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"816a5952-0b40-4365-b524-9e18859b6d37","Content-Type":"application/json"}});Promise.all([B.getProfileInfo(),B.getInitialCardList()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return T(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?T(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1],a=o.name,u=o.about,s=o.avatar,l=o._id;userData.setUserInfo({name:a,about:u,_id:l}),userData.setUserAvatar({avatar:s}),cardList.renderItems(i.reverse())})).catch((function(e){return console.error("Error loading initial info: ".concat(e))}));var D=new m("#popup-preview"),N=new i({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:function(e){N.addItem(function(e){var t=new u({data:{name:e.name||e.title,link:e.link},currentUserId:userData.getUserId(),handleCardClick:function(e){D.open(e)},handleLikeClick:function(e){B.toggleCardLikeStatus(e.getId(),!e.checkIfLiked()).then((function(t){e.setLikesInfo(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?q(Object(n),!0).forEach((function(t){x(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):q(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},t))})).catch((function(e){return console.log("Error changing like status: ".concat(e))}))},handleTrashClick:function(e){V.open(),B.deleteCard(e.getId()).then((function(){e._card.remove()})).catch((function(e){console.error("Delete failed: ".concat(err))}))}},"#card-template");return t.getView()}(e))}},".elements"),M=new I({userNameSelector:"#edit-card-name",userDescriptionSelector:"#edit-card-description",userAvatarSelector:".profile__image"}),F=new O({popupSelector:"#edit-profile-popup",handleFormSubmit:function(e){M.setUserInfo(e)}}),J=new O({popupSelector:"#profile-avatar-popup",handleFormSubmit:function(e,n){t("#profile-avatar-popup",!0),B.setProfileAvatar({avatar:e.avatar}).then((function(e){M.setUserInfo({avatar:e.avatar}),J.closeModal()})).catch((function(e){return console.error("Error changing user avatar: ".concat(e))})).finally((function(){t("#profile-avatar-popup")}))}});J.setEventListeners();var H=new O({popupSelector:"#add-card-popup",handleFormSubmit:function(e){t("#add-card-popup",!0),B.addCard(e).then((function(e){cardList.addItem(createCard(e)),H.close()})).catch((function(e){return console.error("Error adding new card: ".concat(e))})).finally((function(){t("#add-card-popup")}))}}),$=new P(e,document.querySelector("#edit-profile-form")),z=new P(e,document.querySelector("#new-card-form")),Y=new P(e,document.querySelector("#profile-avatar-form"));A.addEventListener("click",(function(e){var t=M.getUserInfo();document.querySelector("#name-input").setAttribute("value",t.name),document.querySelector("#description-input").setAttribute("value",t.description),F.open(t)})),R.addEventListener("click",(function(e){H.open(),z.resetValidation()})),U.addEventListener("click",(function(e){J.open(),Y.resetValidation()})),N.renderItems(),D.setEventListeners(),F.setEventListeners(),H.setEventListeners(),$.enableValidation(),z.enableValidation(),Y.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,